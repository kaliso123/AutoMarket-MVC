@using System.Security.Claims;
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<AutoMarket.Models.Car>

@{
    Layout = "_Layout";
}

<div class="container">
    <h1 class="text-center my-4">Latest Car Listings in our Platform!</h1>

    <div class="text-center mb-4">
        <a asp-action="Create" class="btn btn-primary mx-2">
            <i class="bi bi-plus-circle"></i> Create New
        </a>
        <a asp-action="FilterCars" class="btn btn-info mx-2">
            <i class="bi bi-funnel"></i> Filter Cars
        </a>
    </div>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm" style="border: 1px solid #ddd; border-radius: 8px;">
                    @if (item.Photos != null && item.Photos.Any())
                    {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Photos.First().PhotoData)" alt="Car Photo" class="card-img-top" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <img src="path/to/default/image.jpg" alt="No Photo" class="card-img-top" style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@item.CarBrand.BrandName @item.CarModel.ModelName</h5>
                        <p class="card-text">
                            <strong>Date:</strong> @item.FirstRegistration.ToShortDateString()<br>
                            <strong>Engine Power:</strong> @item.EnginePower<br>
                            <strong>Price:</strong> @item.Price<br>
                            <strong>Fuel Type:</strong> @item.CarFuelType<br>
                            <strong>Mileage:</strong> @item.CarMileage
                        </p>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">View Details</a>
                        @{
                            var canEdit = (await AuthorizationService.AuthorizeAsync(User, item, "ListingOwnerPolicy")).Succeeded;
                            var isAdmin = User.IsInRole("Admin");

                            if (canEdit || isAdmin)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                            }
                        }
                        @{
                            var canDelete = (await AuthorizationService.AuthorizeAsync(User, item, "ListingOwnerPolicy")).Succeeded;

                            if (canDelete)
                            {
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="text-center my-4">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
                 new X.PagedList.Web.Common.PagedListRenderOptions
        {
            DisplayItemSliceAndTotal = true,
            ContainerDivClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
        })
    </div>

    @section Scripts {
        <script>
            $(document).ready(function () {
                $('ul.pagination > li.disabled > a').addClass('page-link');
            });
        </script>
    }
</div>
