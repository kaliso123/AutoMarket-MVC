@using System.Security.Claims;
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IEnumerable<AutoMarket.Models.Car>
@{
    Layout = "_Layout";
}

<div class="container">
    <h1>Car Listings</h1>

    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
        <a asp-action="FilterCars" class="btn btn-info">Filter Cars</a>
    </p>

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.FirstRegistration)</th>
                <th>@Html.DisplayNameFor(model => model.EnginePower)</th>
                <th>@Html.DisplayNameFor(model => model.Price)</th>
                <th>@Html.DisplayNameFor(model => model.CarBrand)</th>
                <th>@Html.DisplayNameFor(model => model.CarModel)</th>
                <th>@Html.DisplayNameFor(model => model.CarFuelType)</th>
                <th>@Html.DisplayNameFor(model => model.CarMileage)</th>
                <th>@Html.DisplayNameFor(model => model.Photos)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FirstRegistration)</td>
                    <td>@Html.DisplayFor(modelItem => item.EnginePower)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.CarBrand.BrandName)</td>
                    <td>@Html.DisplayFor(modelItem => item.CarModel.ModelName)</td>
                    <td>@Html.DisplayFor(modelItem => item.CarFuelType)</td>
                    <td>@Html.DisplayFor(modelItem => item.CarMileage)</td>
                    <td>
                        @if (item.Photos != null && item.Photos.Any())
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Photos.First().PhotoData)" alt="Car Photo" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                        }
                        else
                        {
                            <span>No Photo</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                        @{
                            var canEdit = (await AuthorizationService.AuthorizeAsync(User, item, "ListingOwnerPolicy")).Succeeded;
                            var isAdmin = User.IsInRole("Admin");

                            if (canEdit || isAdmin)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                            }
                        }
                        @{
                            var canDelete = (await AuthorizationService.AuthorizeAsync(User, item, "ListingOwnerPolicy")).Succeeded;

                            if (canDelete)
                            {
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
            new X.PagedList.Web.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
    })

    @section Scripts {
        <script>
            $(document).ready(function () {
                $('ul.pagination > li.disabled > a').addClass('page-link');
            });
        </script>
    }
</div>